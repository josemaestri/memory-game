{"version":3,"sources":["data/data.js","components/Header.js","components/Gameboard.js","components/Tile/Tile.js","components/Footer.js","components/AppWrapper.js","App.js","serviceWorker.js","index.js"],"names":["data","id","name","img","counted","Header","react_default","a","createElement","className","href","this","props","color","text","current","top","Component","Gameboard","children","Tile","_this","onClick","setCounted","src","alt","Footer","AppWrapper","_","require","App","state","score","topScore","shuffle","headerText","handleClick","filter","item","setState","resetGame","incrementScore","newData","map","length","setTimeout","alert","_this2","components_AppWrapper","components_Header","components_Gameboard","tile","components_Tile_Tile","key","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f077d434.chunk.js","sourcesContent":["import React from 'react';\n\nconst data = [\n  {\n    id:1,\n    name:'Wakko',\n    img: '../assets/img/wakkowarner.jpg',\n    counted: false\n  },\n  {\n    id:2,\n    name:'Yakko',\n    img: '../assets/img/YakkoWarner.png',\n    counted: false\n  },\n  {\n    id:3,\n    name:'Dot',\n    img: '../assets/img/dotwarner.jpg',\n    counted: false\n  },\n  {\n    id:4,\n    name:'Pinky',\n    img: '../assets/img/Pinky.png',\n    counted: false\n  },\n  {\n    id:5,\n    name:'Brain',\n    img: '../assets/img/brain.jpg',\n    counted: false\n  },\n  {\n    id:6,\n    name:'Mr. Cory Skullhead',\n    img: '../assets/img/MrSkullhead.png',\n    counted: false\n  },\n  {\n    id:7,\n    name:'Dr. Otto Scratchansniff',\n    img: '../assets/img/DrScratchansniff.jpg',\n    counted: false\n  },\n  {\n    id:8,\n    name:'Freakazoid',\n    img: '../assets/img/Freakazoid.jpg',\n    counted: false\n  },\n  {\n    id:9,\n    name:'Freakazette',\n    img: '../assets/img/Freakazette.jpg',\n    counted: false\n  },\n  {\n    id:10,\n    name:'Dexter Douglas',\n    img: '../assets/img/Dexter.jpg',\n    counted: false\n  },\n  {\n    id:11,\n    name:'Minerva Mink',\n    img: '../assets/img/Minerva_Mink.png',\n    counted: false\n  },\n  {\n    id:12,\n    name:'Big Fat Baby',\n    img: '../assets/img/Big_Fat_Baby.jpg',\n    counted: false\n  }\n];\n\nexport default data;","import React, {Component} from 'react';\n\nclass Header extends Component{\n  render() {\n    return (\n      <header className=\"fixed-top py-3 mb-5 bg-primary\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <a className=\"h2\" href=\"/\"><strong>The Animani-Game</strong></a>\n            </div>\n            <div className=\"col\">\n              <h2 className={this.props.color}>{this.props.text}</h2>\n            </div>\n            <div className=\"col\">\n              <h2>\n                Current: {this.props.current} | Top: {this.props.top}\n              </h2>\n            </div>\n          </div>\n        </div>\n      </header>\n    );\n  }\n};\n\nexport default Header;","import React, {Component} from 'react';\n\nclass Gameboard extends Component{\n  render() {\n    return (\n      <div className=\"gameboard mt-5 pt-5\">\n        <div className=\"container\">\n          <div className=\"row justify-content-around flex-wrap\">\n            {this.props.children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Gameboard;","import React, {Component} from 'react';\nimport './Tile.css';\n\nclass Tile extends Component{\n\n  render(props) {\n    return (\n      <div className=\"card m-3 align-middle game-tile\" onClick={()=> this.props.setCounted(this.props.id)}>\n        <img src={this.props.img} alt=\"\" className=\"card-img-top\"/>\n        \n      </div>\n    );\n  }\n};\n\nexport default Tile;","import React, {Component} from 'react';\n\nclass Footer extends Component{\n  render (){\n    return (\n      <div className=\"footer text-left\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <h5><a href=\"//github.com/josemaestri/memory-game\" className=\"text-dark\">Github</a></h5>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Footer;","import React, {Component} from 'react';\n\nclass AppWrapper extends Component {\n  render(props){\n    return (\n      <div className=\"app text-center mt-5\">\n        {this.props.children}\n      </div>\n    )\n  }\n};\n\nexport default AppWrapper;","import React, {Component} from 'react';\nimport './App.css';\nimport data from './data/data.js';\n\nimport Header from './components/Header';\n//import TopSection from './components/TopSection';\nimport Gameboard from './components/Gameboard';\nimport Tile from './components/Tile';\nimport Footer from './components/Footer';\nimport AppWrapper from './components/AppWrapper';\n\n\nvar _ = require('lodash');\n\n\nclass App extends Component{\n  state = {\n    score: 0,\n    topScore: 0,\n    data: _.shuffle(data),\n    headerText: \"Click an image to begin.\",\n    color: \"text-black\"\n  };\n\n  // functions\n\n  handleClick = (id) => {\n    this.setCounted(id);\n\n    let item = this.state.data.filter(item => item.id === id);\n    let isCounted = item[0].counted;\n    \n    if (isCounted) {\n      this.setState({headerText: 'Oh no! Try again!', color:'text-danger'});\n      this.resetGame();\n    } else{\n      this.setState({headerText: 'You got it!', color:'text-success'});\n      this.incrementScore();\n    }\n  };\n\n  setCounted = (id) => {\n    const newData = this.state.data.map(item =>{\n      if(item.id === id){\n        return {id: item.id, img: item.img, name: item.name, counted: true};        \n      } else{\n        return {id: item.id, img: item.img, name: item.name, counted: item.counted};\n      }\n    });\n    this.setState({data: _.shuffle(newData)});\n  };\n\n  incrementScore = () => {\n    this.setState({score: this.state.score + 1});\n    if(this.state.score >= this.state.topScore){\n      this.setState({topScore: this.state.score + 1});\n    }\n    if(this.state.score >= data.length - 1){\n      this.setState({score: this.state.score + 1, topScore: this.state.topScore + 1, headerText: \"Click an image to begin.\", color: \"text-black\"});\n      setTimeout(() => {\n        alert('Congratulations! You won! Start again?');\n        this.resetGame();\n      },500);\n    }\n  };\n  \n  resetGame = () => {\n    this.setState({score: 0,data: _.shuffle(data)});\n  };\n\n\n  render() {\n    return (\n      <AppWrapper>\n        <Header current={this.state.score} top={this.state.topScore} text={this.state.headerText} color={this.state.color} />\n        <Gameboard data={this.state.data}>\n          {this.state.data.map((tile)=>\n            <Tile key={tile.id} id={tile.id} name={tile.name} img={tile.img} setCounted={this.handleClick} />\n          )}\n        </Gameboard>\n        <Footer />\n      </AppWrapper>\n    );  \n  } \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}